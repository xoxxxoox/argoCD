apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stock-ingress
  namespace: stock-city
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/load-balancer-name: stock-alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=600
    alb.ingress.kubernetes.io/target-type: ip
    external-dns.alpha.kubernetes.io/hostname: su.itbank08.link
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS13-1-2-2021-06
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:477159410287:certificate/8f983667-7eee-4d20-9072-3d88255f37cc

spec:
  rules:
    - host: su.itbank08.link
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: web-svc
                port:
                  number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: web-svc
  labels:
    app: web-app
    project: stock-city
  namespace: stock-city
spec:
  type: NodePort
  selector:
    app: web-app
  ports:
    - port: 80
      targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deploy
  labels:
    app: web-app
    project: stock-city
  namespace: stock-city
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
    spec:
      containers:
        - name: web-app
          image: 477159410287.dkr.ecr.ap-northeast-2.amazonaws.com/itbank08:latest
          ports:
            - containerPort: 80
          resources:
            limits:
              memory: "500Mi"
              cpu: "500m"
